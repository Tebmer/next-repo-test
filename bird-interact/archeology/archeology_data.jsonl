{"instance_id": "1", "selected_database": "archeology", "query": "I'd like to see a quality assessment of scans across our archaeological sites. Show site code, site name,  average Scan Quality Score for each site and rank them from highest to lowest quality.", "preprocess_sql": [], "clean_up_sqls": [], "sol_sql": ["\n/*\n * SQL Intent: Calculate the average Scan Quality Score (SQS) for each site to evaluate scan quality.\n * Knowledge Used: #3 (Scan Quality Score - SQS)\n * Advanced Functions: LOG(), POWER(), AVG(), GROUP BY\n */\n\nSELECT\n    s.zoneref AS site_code,\n    si.zonelabel AS site_name,\n    -- Step 1: Calculate the average SQS for each site and round to 2 decimal places\n    ROUND(\n        AVG(\n            POWER(10.0 / (LOG(10, spc.scanresolmm * 1000.0) / LOG(10, spc.pointdense)) * 5.0, 1.5) *\n            (spc.coverpct / 100.0) *\n            POWER(1.0 - spc.noisedb / 30.0, 2)\n        ),\n        2\n    ) AS avg_sqs\nFROM scans s\nJOIN scanpointcloud spc ON s.arcref = spc.arcref\nJOIN sites si ON s.zoneref = si.zoneregistry\nGROUP BY s.zoneref, si.zonelabel\nORDER BY avg_sqs DESC;\n"], "external_knowledge": [3], "test_cases": [], "category": "Query", "high_level": false, "conditions": {"decimal": 2, "distinct": false}, "amb_user_query": "I'd like to see a quality assessment of scans across our archaeological sites. Show site code, site name, scan quality for each site and rank them.", "user_query_ambiguity": {"critical_ambiguity": [{"term": "scan quality", "sql_snippet": "ROUND(AVG(POWER(10.0 / (LOG(10, spc.scanresolmm * 1000.0) / LOG(10, spc.pointdense)) * 5.0, 1.5) *(spc.coverpct / 100.0) *POWER(1.0 - spc.noisedb / 30.0, 2)), 2) AS avg_sqs", "is_mask": false, "type": "intent_ambiguity"}], "non_critical_ambiguity": [{"term": "decimal", "sql_snippet": "ROUND(AVG(POWER(10.0 / (LOG(10, spc.scanresolmm * 1000.0) / LOG(10, spc.pointdense)) * 5.0, 1.5) *(spc.coverpct / 100.0) *POWER(1.0 - spc.noisedb / 30.0, 2)), 2) AS avg_sqs", "is_mask": false, "type": "decimal_ambiguity"}, {"term": "sort", "sql_snippet": "ORDER BY avg_sqs DESC", "is_mask": false, "type": "sort_ambiguity"}]}, "knowledge_ambiguity": [{"term": "Scan Quality Score (SQS)", "sql_snippet": "ROUND(AVG(POWER(10.0 / (LOG(10, spc.scanresolmm * 1000.0) / LOG(10, spc.pointdense)) * 5.0, 1.5) *(spc.coverpct / 100.0) *POWER(1.0 - spc.noisedb / 30.0, 2)), 2) AS avg_sqs", "is_mask": false, "type": "knowledge_ambiguity", "deleted_knowledge": 3}], "follow_up": {"query": "Great. Now, for each site also include the average Environmental Suitability Index and label it with the ECCS tier.", "sol_sql": "/* -----------------------------------------------------------------\n * Add the Environmental Suitability Index (ESI) and classify it with\n * the Environmental Condition Classification System (ECCS) tier\n * for every site, while keeping the previous average SQS ranking.\n * Knowledge used:\n *   #3  – Scan Quality Score (SQS)\n *   #7  – Environmental Suitability Index (ESI)\n *   #50 – Environmental Condition Classification System (ECCS)\n * -----------------------------------------------------------------*/\n\nWITH sqs_per_scan AS (          -- ① SQS for every scan/point-cloud pair\n    SELECT\n        s.zoneref,\n        POWER(\n            10.0 /                                  -- 10 / SRI\n            ( LOG(10, spc.scanresolmm * 1000.0)\n              / LOG(10, spc.pointdense) )            -- SRI denominator\n            * 5.0,                                   -- ×5  (see SRI def.)\n            1.5                                      -- ^1.5  (SQS weight)\n        )\n        * (spc.coverpct / 100.0)                     -- SCE term\n        * POWER(1.0 - spc.noisedb / 30.0, 2)         -- Noise term\n        AS sqs\n    FROM scans            s\n    JOIN scanpointcloud   spc ON s.arcref = spc.arcref\n),\navg_sqs_site AS (            -- ② average SQS per site\n    SELECT\n        zoneref,\n        ROUND(AVG(sqs), 2) AS avg_sqs\n    FROM   sqs_per_scan\n    GROUP  BY zoneref\n),\nesi_per_rec AS (             -- ③ ESI for every environment record\n    SELECT\n        zoneref,\n        100\n        - 2.5 * ABS(ambictemp - 20)                       -- temperature term\n        - POWER(ABS((humepct - 50) / 2), 1.5)             -- humidity term\n        - 600.0 / (illumelux + 100)                       -- illumination term\n        AS esi\n    FROM scanenvironment\n),\navg_esi_site AS (            -- ④ average ESI per site\n    SELECT\n        zoneref,\n        ROUND(AVG(esi), 2) AS avg_esi\n    FROM   esi_per_rec\n    GROUP  BY zoneref\n),\nsite_scores AS (             -- ⑤ merge quality and environment metrics\n    SELECT\n        s.zoneref,\n        s.avg_sqs,\n        e.avg_esi\n    FROM   avg_sqs_site s\n    LEFT   JOIN avg_esi_site e\n           ON s.zoneref = e.zoneref\n)\nSELECT\n    ss.zoneref        AS site_code,\n    si.zonelabel      AS site_name,\n    ss.avg_sqs,\n    ss.avg_esi,\n    CASE                               /* ECCS tier (#50) */\n        WHEN ss.avg_esi >  85 THEN 'Optimal Scanning Conditions'\n        WHEN ss.avg_esi >= 70 THEN 'Good Scanning Conditions'\n        WHEN ss.avg_esi >= 50 THEN 'Acceptable Scanning Conditions'\n        ELSE                           'Challenging Scanning Conditions'\n    END            AS environment_tier\nFROM   site_scores ss\nJOIN   sites       si ON ss.zoneref = si.zoneregistry\nORDER  BY ss.avg_sqs DESC;             -- keep ranking by scan quality", "external_knowledge": [7, 50], "type": "attribute_change", "test_cases": [], "category": "Query"}}
{"instance_id": "2", "selected_database": "archeology", "query": "Could you help me find archaeological sites that might need urgent conservation attention? I'm particularly interested in identifying sites that fall into Degradation Risk Zones. For each site, I'd like to see their code, name, structural state, and preservation status, along with their Risk Zone Category. This information would help our conservation team prioritize their efforts.", "preprocess_sql": [], "clean_up_sqls": [], "sol_sql": ["\n/*\n * SQL Intent: Identify sites in \"Degradation Risk Zones\" based on preservation status and structural stability.\n * Knowledge Used: #14 (Degradation Risk Zone), #26, #52\n * Advanced Functions: CASE, String Matching (IN)\n */\n\nSELECT\n    si.zoneregistry AS site_code,\n    si.zonelabel AS site_name,\n    sc.structstate AS structural_state,\n    si.presstat AS preservation_status,\n    -- Step 1: Classify sites into degradation risk zones\n    CASE\n        WHEN si.presstat IN ('Poor', 'Critical') AND sc.structstate <> 'Stable' THEN 'Degradation Risk Zone'\n        ELSE 'Not in Risk Zone'\n    END AS risk_zone\nFROM sites si\nLEFT JOIN scanconservation sc ON si.zoneregistry = sc.zoneref;\n"], "external_knowledge": [14, 26, 52], "test_cases": [], "category": "Query", "high_level": true, "conditions": {"decimal": -1, "distinct": false}, "amb_user_query": "Could you help me find archaeological sites that might need urgent conservation attention? I'm particularly interested in identifying sites in Risk Zones. For each site, I'd like to see their code, name, structural condition, and status, along with their risk category.", "user_query_ambiguity": {"critical_ambiguity": [{"term": "Risk Zones", "sql_snippet": "CASE WHEN si.presstat IN ('Poor', 'Critical') AND sc.structstate <> 'Stable' THEN 'Degradation Risk Zone' ELSE 'Not in Risk Zone' END AS risk_zone", "is_mask": true, "type": "knowledge_linking_ambiguity"}, {"term": "structural condition", "sql_snippet": "sc.structstate AS structural_state", "is_mask": false, "type": "schema_linking_ambiguity"}, {"term": "risk category", "sql_snippet": "CASE WHEN si.presstat IN ('Poor', 'Critical') AND sc.structstate <> 'Stable' THEN 'Degradation Risk Zone' ELSE 'Not in Risk Zone' END AS risk_zone", "is_mask": false, "type": "schema_linking_ambiguity"}], "non_critical_ambiguity": [{"term": "status", "sql_snippet": "LEFT JOIN scanconservation sc ON si.zoneregistry = sc.zoneref;", "is_mask": false, "type": "join_ambiguity"}]}, "knowledge_ambiguity": [{"term": "Degradation Risk Zone", "sql_snippet": "CASE WHEN si.presstat IN ('Poor', 'Critical') AND sc.structstate <> 'Stable' THEN 'Degradation Risk Zone'", "is_mask": false, "type": "knowledge_ambiguity", "deleted_knowledge": 14}], "follow_up": {"query": "How many sites fall into each risk-zone category? Please give a count grouped by the Risk Zone classification.", "sol_sql": "/* Aggregate the sites by their Risk Zone Category\n * Knowledge used: #14 (Degradation Risk Zone), #26, #52\n */\nSELECT\n    CASE\n        WHEN si.presstat IN ('Poor', 'Critical')\n             AND sc.structstate <> 'Stable'\n        THEN 'Degradation Risk Zone'\n        ELSE 'Not in Risk Zone'\n    END AS risk_zone,\n    COUNT(*) AS site_count\nFROM sites            si\nLEFT JOIN scanconservation sc\n       ON sc.zoneref = si.zoneregistry\nGROUP BY risk_zone\nORDER BY site_count DESC;", "external_knowledge": [], "type": "result_based", "test_cases": [], "category": "Query"}}
